# Infrastructure CI pipeline - validates and plans changes
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - terraform/**

pr:
  branches:
    include:
      - main
  paths:
    include:
      - terraform/**
      
pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: online-boutique.common
  - group: online-boutique.infrastructure
  - name: TERRAFORM_DIR
    value: '$(System.DefaultWorkingDirectory)/terraform'
  - name: TERRAFORM_TEMPLATE
    value: 'templates/terraform.yml'
  - name: SECURITY_TEMPLATE
    value: 'templates/security.yml'

stages:
- stage: Quality
  displayName: 'Code Quality Checks'
  dependsOn: []
  jobs:
  - job: Format
    displayName: 'Check Terraform Formatting'
    timeoutInMinutes: 10
    steps:
    - checkout: self
      path: terraform
    - template: ${{ variables.TERRAFORM_TEMPLATE }}
      parameters:
        workingDirectory: '$(TERRAFORM_DIR)'
        command: 'fmt'
  
  - job: Validate
    displayName: 'Infrastructure Validate'
    timeoutInMinutes: 15
    steps:
    - checkout: self
      path: terraform
    - template: ${{ variables.TERRAFORM_TEMPLATE }}
      parameters:
        workingDirectory: '$(TERRAFORM_DIR)'
        command: 'validate'

- stage: Security
  displayName: 'Security Scanning'
  dependsOn: Quality
  condition: succeeded()
  jobs:
  - job: Security
    displayName: 'Security Scan'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      path: terraform
    - template: ${{ variables.SECURITY_TEMPLATE }}
      parameters:
        workingDirectory: '$(TERRAFORM_DIR)'
        checkovFramework: 'terraform'
        failOnHigh: true

- stage: Planning
  displayName: 'Infrastructure Planning'
  dependsOn: Quality
  condition: succeeded()
  jobs:
  - job: Plan
    displayName: 'Infrastructure Plan'
    timeoutInMinutes: 30
    steps:
    - checkout: self
      path: terraform
    - template: ${{ variables.TERRAFORM_TEMPLATE }}
      parameters:
        workingDirectory: '$(TERRAFORM_DIR)'
        command: 'plan' 
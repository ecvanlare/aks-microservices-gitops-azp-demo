parameters:
  workingDirectory: ''
  checkovFramework: 'terraform' # terraform, arm, kubernetes, etc.
  failOnHigh: true              # true to fail on HIGH/CRITICAL, false to only warn

steps:
- script: |
    echo "Installing Checkov..."
    pip install --upgrade pip checkov jq
    checkov -d . --framework ${{ parameters.checkovFramework }} --output json --output-file checkov-results.json --soft-fail
    echo "==== Checkov Severity Summary ===="
    for level in CRITICAL HIGH MEDIUM LOW; do
      COUNT=$(jq --arg level "$level" '[.results.failed_checks[] | select(.severity==$level)] | length' checkov-results.json)
      echo "$level: $COUNT"
    done
    UNASSIGNED=$(jq '[.results.failed_checks[] | select(.severity==null)] | length' checkov-results.json)
    echo "UNASSIGNED: $UNASSIGNED"
    HIGH_COUNT=$(jq '[.results.failed_checks[] | select(.severity=="HIGH" or .severity=="CRITICAL")] | length' checkov-results.json)
    if [ "${{ parameters.failOnHigh }}" = "true" ] && [ "$HIGH_COUNT" -gt 0 ]; then
      echo "ERROR: Found $HIGH_COUNT HIGH or CRITICAL severity issues."
      exit 1
    fi
  displayName: 'Checkov Security Scan (Fail on High/Critical)'
  workingDirectory: ${{ parameters.workingDirectory }}

- task: PublishBuildArtifacts@1
  displayName: 'Publish Checkov JSON Report'
  inputs:
    PathtoPublish: '${{ parameters.workingDirectory }}/checkov-results.json'
    ArtifactName: 'CheckovReport'
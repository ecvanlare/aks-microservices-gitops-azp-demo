trigger:
  branches:
    include:
      - argocd
  paths:
    include:
      - gitops/**

pool:
  vmImage: $(VM_IMAGE)

variables:
  - group: 'online-boutique.common'
  - group: 'online-boutique.kubernetes'
  - group: 'online-boutique.gitops'
  - name: VM_IMAGE
    value: 'ubuntu-latest'

stages:
- stage: Bootstrap
  displayName: 'GitOps Bootstrap'
  jobs:
  - job: Setup
    displayName: 'Setup ArgoCD and Infrastructure'
    steps:
    - checkout: self
      displayName: 'Checkout repository'
      # Uses Azure Pipelines GitHub app automatically
      # No need to specify connection name when using GitHub app

    - template: templates/azure-auth.yml
      parameters:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        resourceGroup: $(RESOURCE_GROUP)
        aksClusterName: $(AKS_CLUSTER_NAME)

    - script: |
        echo "Creating argocd namespace..."
        kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
      displayName: 'Create ArgoCD namespace'

    - script: |
        echo "Installing ArgoCD..."
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      displayName: 'Install ArgoCD'

    - script: |
        echo "Waiting for ArgoCD to be ready..."
        kubectl wait --for=condition=available --timeout=300s deployment/argocd-server -n argocd
      displayName: 'Wait for ArgoCD deployment'

    - script: |
        echo "Getting ArgoCD admin password..."
        ADMIN_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
        echo "##vso[task.setvariable variable=ADMIN_PASSWORD]$ADMIN_PASSWORD"
        echo "Admin password retrieved successfully"
      displayName: 'Get ArgoCD admin password'

    - script: |
        echo "Installing ArgoCD CLI..."
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd-linux-amd64
        sudo mv argocd-linux-amd64 /usr/local/bin/argocd
      displayName: 'Install ArgoCD CLI'

    - script: |
        echo "Using Azure Pipelines GitHub app for repository access..."
        echo "Repository: $(GITOPS_REPO_URL)"
        echo "Branch: $(GITOPS_BRANCH)"
        echo "Authentication: Azure Pipelines GitHub App"
      displayName: 'Log repository info'

    - script: |
        echo "Port-forwarding ArgoCD server..."
        kubectl port-forward -n argocd svc/argocd-server 8080:443 &
        sleep 10
      displayName: 'Setup port-forward for ArgoCD'

    - script: |
        echo "Logging into ArgoCD CLI..."
        argocd login localhost:8080 --username admin --password $(ADMIN_PASSWORD) --insecure
      displayName: 'Login to ArgoCD CLI'

    - script: |
        echo "Adding private repository using Azure Pipelines GitHub app..."
        argocd repo add $(GITOPS_REPO_URL) --type git
      displayName: 'Add private repository'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/argocd'))

    - script: |
        echo "Adding external repositories for infrastructure components..."
        argocd repo add https://charts.jetstack.io --type helm --name jetstack
        argocd repo add https://github.com/kubernetes/ingress-nginx.git --type git
        argocd repo add https://github.com/kubernetes-sigs/external-dns.git --type git
      displayName: 'Add external repositories'

    - script: |
        echo "Applying root app to deploy infrastructure..."
        kubectl apply -f gitops/root/root-app.yaml
      displayName: 'Deploy root app'

    - script: |
        echo "Waiting for root app to sync..."
        sleep 30
        argocd app sync root-app
      displayName: 'Sync root app'

    - script: |
        echo "Monitoring application status..."
        echo "=== Application List ==="
        argocd app list
        echo ""
        echo "=== Root App Status ==="
        argocd app get root-app
      displayName: 'Monitor application status'

    - script: |
        echo "GitOps bootstrap completed successfully!"
        echo "Repository: $(GITOPS_REPO_URL)"
        echo "Branch: $(GITOPS_BRANCH)"
        echo "Azure Subscription: $(AZURE_SUBSCRIPTION)"
        echo "Resource Group: $(RESOURCE_GROUP)"
        echo "AKS Cluster: $(AKS_CLUSTER_NAME)"
      displayName: 'Log completion details'

    - script: |
        echo "GitOps bootstrap completed successfully!"
        echo "ArgoCD is now managing your infrastructure and applications."
        echo "Access ArgoCD UI at: https://localhost:8080 (when port-forwarding)"
        echo "Username: admin"
        echo "Password: $(ADMIN_PASSWORD)"
      displayName: 'Bootstrap completion message' 
trigger:
  branches:
    include:
      - "main"
  paths:
    include:
      - "src/**"
      - "online-boutique-chart/**"

variables:
  - group: 'online-boutique.common'
  - group: 'online-boutique.docker'
  - group: 'online-boutique.kubernetes'
  - name: APP_SOURCE_DIR
    value: '$(System.DefaultWorkingDirectory)/src'
  - name: VM_IMAGE
    value: 'ubuntu-22.04'

pool:
  vmImage: $(VM_IMAGE)

stages:
  - stage: DetectChanges
    displayName: 'Detect Changed Services and Calculate Version'
    jobs:
    - job: AnalyzeChanges
      steps:
      - template: ../templates/gitversion/gitversion-template.yml
        parameters:
          name: 'GitVersion'
          fetchDepth: 0
          useConfigFile: false

      - template: ../templates/detect-changes-task.yml
        parameters:
          gitDepth: 1
          sourceDir: 'src'
          chartDir: 'online-boutique-chart'

  - stage: BuildServices
    displayName: 'Build Changed Services'
    dependsOn: DetectChanges
    condition: succeeded()
    variables:
      SEMVER: $[ dependencies.DetectChanges.outputs['AnalyzeChanges.GitVersion.SEMVER'] ]
    jobs:
    - job: BuildAndPush
      strategy:
        matrix:
          $[ dependencies.DetectChanges.outputs['AnalyzeChanges.SERVICES_TO_BUILD'] ]:
            cartservice:
              serviceName: 'cartservice'
              dockerfile: '$(APP_SOURCE_DIR)/cartservice/src/Dockerfile'
              context: 'src/cartservice/src'
            frontend:
              serviceName: 'frontend'
              dockerfile: '$(APP_SOURCE_DIR)/frontend/Dockerfile'
              context: 'src/frontend'
            productcatalogservice:
              serviceName: 'productcatalogservice'
              dockerfile: '$(APP_SOURCE_DIR)/productcatalogservice/Dockerfile'
              context: 'src/productcatalogservice'
            currencyservice:
              serviceName: 'currencyservice'
              dockerfile: '$(APP_SOURCE_DIR)/currencyservice/Dockerfile'
              context: 'src/currencyservice'
            emailservice:
              serviceName: 'emailservice'
              dockerfile: '$(APP_SOURCE_DIR)/emailservice/Dockerfile'
              context: 'src/emailservice'
            paymentservice:
              serviceName: 'paymentservice'
              dockerfile: '$(APP_SOURCE_DIR)/paymentservice/Dockerfile'
              context: 'src/paymentservice'
            shippingservice:
              serviceName: 'shippingservice'
              dockerfile: '$(APP_SOURCE_DIR)/shippingservice/Dockerfile'
              context: 'src/shippingservice'
            recommendationservice:
              serviceName: 'recommendationservice'
              dockerfile: '$(APP_SOURCE_DIR)/recommendationservice/Dockerfile'
              context: 'src/recommendationservice'
            adservice:
              serviceName: 'adservice'
              dockerfile: '$(APP_SOURCE_DIR)/adservice/Dockerfile'
              context: 'src/adservice'
            checkoutservice:
              serviceName: 'checkoutservice'
              dockerfile: '$(APP_SOURCE_DIR)/checkoutservice/Dockerfile'
              context: 'src/checkoutservice'
            shoppingassistantservice:
              serviceName: 'shoppingassistantservice'
              dockerfile: '$(APP_SOURCE_DIR)/shoppingassistantservice/Dockerfile'
              context: 'src/shoppingassistantservice'
      pool:
        vmImage: $(VM_IMAGE)
      steps:
      - template: ../templates/build-service-tasks.yml
        parameters:
          services:
            - name: $(serviceName)
              dockerfile: $(dockerfile)
              context: $(context)

  - stage: DeployToDev
    displayName: 'Deploy to Dev Environment'
    dependsOn: BuildServices
    condition: succeeded()
    variables:
      - group: 'online-boutique.dev'
      - name: SEMVER
        value: $[ dependencies.DetectChanges.outputs['AnalyzeChanges.GitVersion.SEMVER'] ]
    jobs:
    - job: Deploy
      pool:
        vmImage: $(VM_IMAGE)
      steps:
      - template: ../templates/deploy-service-tasks.yml
        parameters:
          namespace: $(NAMESPACE)
          releaseName: $(RELEASE_NAME)
          includeVerification: true

  - stage: DeployToProduction
    displayName: 'Deploy to Production Environment'
    dependsOn: DeployToDev
    condition: succeeded()
    environment: 'online-boutique-prod'
    variables:
      - name: SEMVER
        value: $[ dependencies.DetectChanges.outputs['AnalyzeChanges.GitVersion.SEMVER'] ]
    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../templates/deploy-service-tasks.yml
            parameters:
              namespace: $(NAMESPACE)
              releaseName: $(RELEASE_NAME)
              includeVerification: true 
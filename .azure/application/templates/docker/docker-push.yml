parameters:
  acrName: ''  # Required: ACR name
  resourceGroup: ''  # Required: Resource group name
  serviceName: ''  # Required: Service name to push
  azureSubscription: ''  # Required: Azure subscription service connection name
  tags: ''  # Optional: Image tags

steps:
- script: |
    echo "=== ACR Push Debug Information ==="
    echo "Service: ${{ parameters.serviceName }}"
    echo "ACR Name: ${{ parameters.acrName }}"
    echo "Resource Group: ${{ parameters.resourceGroup }}"
    echo "Tags: ${{ parameters.tags }}"
    echo "Azure Subscription: ${{ parameters.azureSubscription }}"
    echo "====================================="
    
    # Check if local image exists
    echo "=== Local Image Check ==="
    if docker images "${{ parameters.serviceName }}:${{ parameters.tags }}" --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | grep -q "${{ parameters.serviceName }}"; then
      echo "✅ Local image exists: ${{ parameters.serviceName }}:${{ parameters.tags }}"
    else
      echo "❌ Local image not found: ${{ parameters.serviceName }}:${{ parameters.tags }}"
      exit 1
    fi
    
    # Show local images
    echo "Local Docker images:"
    docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | grep "${{ parameters.serviceName }}" || echo "No local images found"
  displayName: 'Debug Push Information'

- task: AzureCLI@2
  displayName: 'Login to Azure Container Registry'
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "=== ACR Login Debug ==="
      echo "Logging into ACR: ${{ parameters.acrName }}"
      
      # Check current Azure context
      echo "Current Azure subscription:"
      az account show --query "{name:name, id:id}" --output table
      
      # Login to ACR
      if az acr login --name "${{ parameters.acrName }}"; then
        echo "✅ Successfully logged into ACR ${{ parameters.acrName }}"
      else
        echo "❌ Failed to login to ACR ${{ parameters.acrName }}"
        exit 1
      fi
      
      # Verify ACR access
      echo "ACR details:"
      az acr show -n "${{ parameters.acrName }}" -g "${{ parameters.resourceGroup }}" --query "{name:name, loginServer:loginServer, provisioningState:provisioningState}" --output table

- script: |
    echo "=== Tag Image for ACR ==="
    echo "Tagging local image for ACR push..."
    
    # Tag the local image for ACR
    docker tag "${{ parameters.serviceName }}:${{ parameters.tags }}" "${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.tags }}"
    
    # Verify the tagged image
    if docker images "${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.tags }}" --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | grep -q "${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}"; then
      echo "✅ Image tagged successfully: ${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.tags }}"
    else
      echo "❌ Failed to tag image for ACR"
      exit 1
    fi
  displayName: 'Tag Image for ACR'

- task: Docker@2
  displayName: 'Push ${{ parameters.serviceName }} to ACR'
  inputs:
    command: push
    repository: ${{ parameters.serviceName }}
    containerRegistry: ${{ parameters.acrName }}
    tags: ${{ parameters.tags }}

- script: |
    echo "=== Push Verification ==="
    echo "Verifying image was pushed successfully..."
    
    # Verify image in ACR
    echo "Checking image in ACR..."
    if az acr repository show-tags -n "${{ parameters.acrName }}" --repository "${{ parameters.serviceName }}" --query "[?contains(@, '${{ parameters.tags }}')]" --output table; then
      echo "✅ Image ${{ parameters.serviceName }}:${{ parameters.tags }} found in ACR"
    else
      echo "❌ Image ${{ parameters.serviceName }}:${{ parameters.tags }} not found in ACR"
      exit 1
    fi
    
    echo "=== Push Summary ==="
    echo "Service: ${{ parameters.serviceName }}"
    echo "Image: ${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.tags }}"
    echo "Push completed successfully!"
  displayName: 'Verify Push Success'

- script: |
    echo "Image pushed to ACR: ${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.tags }}"
  displayName: 'Echo Pushed Image Tag for ${{ parameters.serviceName }}' 
# Detect Changes Template
# Contains all change detection functionality in one organized file

parameters:
  # Git configuration
  gitDepth: 0  # Number of commits to look back
  sourceDir: 'src'  # Source directory to monitor
  chartDir: 'gitops/helm-charts/app-chart'  # Helm chart directory to monitor

  # Azure configuration
  acrName: ''  # Required: ACR name for emptiness check
  resourceGroup: ''  # Required: Resource group for ACR
  azureSubscription: ''  # Required: Azure subscription service connection

steps:
  - template: service-definitions.yml

  - script: |
      echo "=== Testing Variable Access ==="
      echo "Testing if service definitions template was called..."
      echo "SetServiceList.ALL_SERVICES: $(SetServiceList.ALL_SERVICES)"
      echo "SetServiceDefinitions.ADSERVICE_CONFIG: $(SetServiceDefinitions.ADSERVICE_CONFIG)"
    displayName: 'Debug Variable Access'

  - task: AzureCLI@2
    displayName: 'Check ACR Repository Status'
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Checking ACR repositories in ${acrName}..."
        repositories=$(az acr repository list --name ${{ parameters.acrName }} -o tsv || echo "")
        echo "Found repositories: $repositories"
        echo "##vso[task.setvariable variable=ACR_REPOSITORIES]$repositories"
    name: ACRCheck

  - script: |
      echo "Detecting changed services..."

      ALL_SERVICES=$(echo "$(SetServiceList.ALL_SERVICES)" | tr ',' ' ')
      echo "All services: $ALL_SERVICES"

      declare -A SERVICE_PATHS

      SERVICE_PATHS[cartservice]="src/cartservice"
      SERVICE_PATHS[frontend]="src/frontend"
      SERVICE_PATHS[productcatalogservice]="src/productcatalogservice"
      SERVICE_PATHS[currencyservice]="src/currencyservice"
      SERVICE_PATHS[emailservice]="src/emailservice"
      SERVICE_PATHS[paymentservice]="src/paymentservice"
      SERVICE_PATHS[shippingservice]="src/shippingservice"
      SERVICE_PATHS[recommendationservice]="src/recommendationservice"
      SERVICE_PATHS[adservice]="src/adservice"
      SERVICE_PATHS[checkoutservice]="src/checkoutservice"
      SERVICE_PATHS[shoppingassistantservice]="src/shoppingassistantservice"

      CHANGED_FILES=$(git diff --name-only origin/main...HEAD || git diff --name-only HEAD~${{ parameters.gitDepth }} || echo "")
      echo "Changed files: $CHANGED_FILES"

      SERVICES_TO_BUILD=""

      for service in $ALL_SERVICES; do
        echo "Checking service: $service"
        service_path="${SERVICE_PATHS[$service]}"
        [[ "$service_path" != */ ]] && service_path="${service_path}/"

        service_has_changes=false
        while IFS= read -r changed_file; do
          changed_file=$(echo "$changed_file" | tr '\\' '/')
          if [[ "$changed_file" == "$service_path"* ]]; then
            echo "  âœ… Match: $changed_file in $service_path"
            service_has_changes=true
            break
          fi
        done <<< "$CHANGED_FILES"

        if $service_has_changes; then
          echo "##vso[task.setvariable variable=BUILD_${service^^};isOutput=true]true"
          SERVICES_TO_BUILD+="$service "
        else
          echo "##vso[task.setvariable variable=BUILD_${service^^};isOutput=true]false"
        fi
      done

      SERVICES_TO_BUILD=$(echo "$SERVICES_TO_BUILD" | xargs)
      echo "Changed services to build: $SERVICES_TO_BUILD"
      echo "##vso[task.setvariable variable=SERVICES_TO_BUILD;isOutput=true]$SERVICES_TO_BUILD"
    displayName: 'Detect Changed Services'
    name: DetectChanges
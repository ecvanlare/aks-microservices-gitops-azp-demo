parameters:
  imageName: ''
  imageTag: ''
  registryUrl: ''
  failOnHigh: true
  severityThreshold: 'HIGH' # CRITICAL, HIGH, MEDIUM, LOW, UNKNOWN

steps:
- task: trivy@2
  displayName: 'Trivy Image Security Scan - ${{ parameters.imageName }}'
  inputs:
    type: 'image'
    target: '${{ parameters.registryUrl }}/${{ parameters.imageName }}:${{ parameters.imageTag }}'
    scanners: 'vuln,misconfig,secret'
    severity: '${{ parameters.severityThreshold }},CRITICAL'
    format: 'json'
    outputFile: 'trivy-cd-results-${{ parameters.imageName }}.json'
    exitCode: '0'
    ignoreUnfixed: false
    vulnType: 'os,library'
    securityChecks: 'vuln,config,secret'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Trivy CD Report - ${{ parameters.imageName }}'
  condition: always()
  inputs:
    PathtoPublish: 'trivy-cd-results-${{ parameters.imageName }}.json'
    ArtifactName: 'TrivyCDReport-${{ parameters.imageName }}' 
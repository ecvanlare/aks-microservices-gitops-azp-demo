# Get Services and Tags Template
# Extracts services from DetectChanges stage and formats them with semver tags

parameters:
  # Stage dependency information
  detectChangesStage: 'DetectChanges'
  detectChangesJob: 'AnalyzeChanges'
  detectChangesTask: 'DetectChanges'
  servicesOutputVariable: 'SERVICES_TO_BUILD_STAGE'
  
  # Output variable name for the formatted services
  outputVariableName: 'SERVICES_TO_BUILD_FIXED'

steps:
  - script: |
      echo "Getting services and tags from ${{ parameters.detectChangesStage }} stage..."
      
      # Get services from DetectChanges stage
      SERVICES_FROM_DETECT="$[ stageDependencies.${{ parameters.detectChangesStage }}.${{ parameters.detectChangesJob }}.outputs['${{ parameters.detectChangesTask }}.${{ parameters.servicesOutputVariable }}'] ]"
      
      echo "Services from ${{ parameters.detectChangesStage }}: '$SERVICES_FROM_DETECT'"
      echo "Semver from stage variable: '$(SEMVER)'"
      
      # Convert services to service:tag format
      BUILT_SERVICES_WITH_TAGS=""
      if [ -n "$SERVICES_FROM_DETECT" ] && [ -n "$(SEMVER)" ]; then
        # Split services by space and add semver to each
        for service in $SERVICES_FROM_DETECT; do
          if [ -n "$service" ]; then
            BUILT_SERVICES_WITH_TAGS="$BUILT_SERVICES_WITH_TAGS $service:$(SEMVER)"
          fi
        done
      fi
      
      # Trim leading space
      BUILT_SERVICES_WITH_TAGS=$(echo "$BUILT_SERVICES_WITH_TAGS" | sed 's/^ *//')
      
      echo "Built services with tags: '$BUILT_SERVICES_WITH_TAGS'"
      echo "##vso[task.setvariable variable=${{ parameters.outputVariableName }}]$BUILT_SERVICES_WITH_TAGS"
    displayName: 'Get Services and Tags from ${{ parameters.detectChangesStage }}' 
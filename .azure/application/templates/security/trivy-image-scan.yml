parameters:
  imageName: ''
  semver: ''
  registryUrl: ''
  failOnHigh: false
  severityThreshold: 'CRITICAL' # CRITICAL, HIGH, MEDIUM, LOW, UNKNOWN
  azureSubscription: $(AZURE_SUBSCRIPTION)  # Required: Azure subscription service connection name

steps:
- task: AzureCLI@2
  displayName: 'Load Image from Artifact'
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "=== Load Image for Scan ==="
      echo "Image: ${{ parameters.imageName }}:${{ parameters.semver }}"
      
      # Load the Docker image from the artifact
      if [ ! -f "$(Pipeline.Workspace)/${{ parameters.imageName }}-docker-image/image.tar" ]; then
        echo "❌ Docker image artifact not found"
        exit 1
      fi
      
      docker load -i "$(Pipeline.Workspace)/${{ parameters.imageName }}-docker-image/image.tar"
      echo "✅ Image loaded for scanning"

- task: trivy@2
  name: TrivyImageScan
  displayName: 'Trivy Security Scan'
  inputs:
    version: 'latest'
    type: 'image'
    target: '${{ parameters.imageName }}:${{ parameters.semver }}'
    scanners: 'misconfig,vuln,secret'
    severity: '${{ parameters.severityThreshold }}'
    ignoreUnfixed: true
    ignoreScanErrors: true
    reports: 'html,junit,sarif'
    publish: true

- task: PublishTestResults@2
  displayName: 'Publish Scan Results'
  condition: always()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(TrivyImageScan.junitReport)'
    searchFolder: '$(Agent.TempDirectory)'
    testRunTitle: 'Trivy Image Scan - ${{ parameters.imageName }}:${{ parameters.semver }}'
    publishRunAttachments: false 
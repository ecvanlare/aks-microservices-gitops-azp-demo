# Docker Push Template
# Pushes Docker images to Azure Container Registry

parameters:
  serviceName: ''  # Service name to push
  semver: ''  # Semantic version for image tag
  artifactName: ''  # Artifact name (defaults to serviceName-docker-image)
  
  # Azure Configuration
  acrName: '$(ACR_NAME)'  # Azure Container Registry name
  resourceGroup: '$(RESOURCE_GROUP)'  # Resource group
  azureSubscription: '$(AZURE_SUBSCRIPTION)'  # Azure subscription

steps:
  # Download Docker image artifact
  - download: current
    artifact: '${{ parameters.serviceName }}-docker-image'
    displayName: 'Download Build Artifact'

  # Load and tag image for ACR
  - task: AzureCLI@2
    displayName: 'Load and Tag Image'
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Set artifact name if not provided
        ARTIFACT_NAME="${{ parameters.artifactName }}"
        if [ -z "$ARTIFACT_NAME" ]; then
          ARTIFACT_NAME="${{ parameters.serviceName }}-docker-image"
        fi
        
        # Load Docker image from artifact
        if [ ! -f "$(Pipeline.Workspace)/$ARTIFACT_NAME/image.tar" ]; then
          echo "❌ Docker image artifact not found"
          exit 1
        fi
        
        docker load -i "$(Pipeline.Workspace)/$ARTIFACT_NAME/image.tar"
        
        # Tag for ACR
        docker tag "${{ parameters.serviceName }}:${{ parameters.semver }}" "${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.semver }}"

  # Push image to ACR
  - task: Docker@2
    displayName: 'Push to ACR'
    inputs:
      command: 'push'
      containerRegistry: ${{ parameters.acrName }}
      repository: ${{ parameters.serviceName }}
      tags: ${{ parameters.semver }}

  # Verify image was pushed successfully
  - task: AzureCLI@2
    displayName: 'Verify Push'
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Verify image in ACR
        if az acr repository show-tags -n "${{ parameters.acrName }}" --repository "${{ parameters.serviceName }}" --query "[?contains(@, '${{ parameters.semver }}')]" --output table; then
          echo "✅ Image ${{ parameters.serviceName }}:${{ parameters.semver }} pushed successfully"
        else
          echo "❌ Image not found in ACR"
          exit 1
        fi 
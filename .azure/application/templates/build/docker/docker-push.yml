# Docker Push Template
# Pushes Docker images to Azure Container Registry

parameters:
  serviceName: ''  # Service name to push
  semver: ''  # Semantic version for image tag
  acrName: '$(ACR_NAME)'  # Azure Container Registry name

steps:
  # Download and load artifact
  - download: current
    artifact: '${{ parameters.serviceName }}-docker-image'
    displayName: 'Download Build Artifact'

  # Load and tag image for ACR
  - task: AzureCLI@2
    displayName: 'Load and Tag Image'
    inputs:
      azureSubscription: $(AZURE_SUBSCRIPTION)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Validate artifact exists
        if [ ! -f "$(Pipeline.Workspace)/${{ parameters.serviceName }}-docker-image/image.tar" ]; then
          echo "❌ Docker image artifact not found: $(Pipeline.Workspace)/${{ parameters.serviceName }}-docker-image/image.tar"
          exit 1
        fi
        
        docker load -i "$(Pipeline.Workspace)/${{ parameters.serviceName }}-docker-image/image.tar"
        docker tag "${{ parameters.serviceName }}:${{ parameters.semver }}" "${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.semver }}"
        docker tag "${{ parameters.serviceName }}:${{ parameters.semver }}" "${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:stable"

  # Push image to ACR
  - task: Docker@2
    displayName: 'Push to ACR'
    inputs:
      command: 'push'
      containerRegistry: ${{ parameters.acrName }}
      repository: ${{ parameters.serviceName }}
      tags: ${{ parameters.semver }},stable

  # Verify push was successful
  - task: AzureCLI@2
    displayName: 'Verify Push'
    inputs:
      azureSubscription: $(AZURE_SUBSCRIPTION)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Verify image was pushed successfully
        if az acr repository show-tags -n "${{ parameters.acrName }}" --repository "${{ parameters.serviceName }}" --query "[?contains(@, '${{ parameters.semver }}')]" --output table; then
          echo "✅ Image ${{ parameters.serviceName }}:${{ parameters.semver }} pushed successfully"
        else
          echo "❌ Image not found in ACR after push"
          exit 1
        fi 
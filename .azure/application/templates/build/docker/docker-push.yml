parameters:
  serviceName: ''  # Required: Service name to push
  semver: ''  # Required: Semantic version for image tag
  artifactName: ''  # Optional: Artifact name (defaults to serviceName-docker-image)
  
  # Azure Configuration (with defaults from variable groups)
  acrName: '$(ACR_NAME)'  # Default from variable group
  resourceGroup: '$(RESOURCE_GROUP)'  # Default from variable group
  azureSubscription: '$(AZURE_SUBSCRIPTION)'  # Default from variable group

steps:
- task: AzureCLI@2
  displayName: 'Load and Tag Image'
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "=== Load and Tag Image ==="
      echo "Service: ${{ parameters.serviceName }}"
      echo "ACR: ${{ parameters.acrName }}"
      echo "Semver: ${{ parameters.semver }}"
      
      # Set artifact name if not provided
      ARTIFACT_NAME="${{ parameters.artifactName }}"
      if [ -z "$ARTIFACT_NAME" ]; then
        ARTIFACT_NAME="${{ parameters.serviceName }}-docker-image"
      fi
      
      # Load Docker image from artifact
      if [ ! -f "$(Pipeline.Workspace)/$ARTIFACT_NAME/image.tar" ]; then
        echo "❌ Docker image artifact not found: $(Pipeline.Workspace)/$ARTIFACT_NAME/image.tar"
        exit 1
      fi
      
      docker load -i "$(Pipeline.Workspace)/$ARTIFACT_NAME/image.tar"
      
      # Tag for ACR
      docker tag "${{ parameters.serviceName }}:${{ parameters.semver }}" "${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.semver }}"
      
      echo "✅ Image loaded and tagged for ACR"

- task: AzureContainerRegistry@1
  displayName: 'Push to ACR'
  inputs:
    command: 'push'
    containerRegistry: ${{ parameters.acrName }}
    repository: ${{ parameters.serviceName }}
    tags: ${{ parameters.semver }}

- task: AzureCLI@2
  displayName: 'Verify Push'
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "=== Verify Push ==="
      
      # Verify image in ACR
      if az acr repository show-tags -n "${{ parameters.acrName }}" --repository "${{ parameters.serviceName }}" --query "[?contains(@, '${{ parameters.semver }}')]" --output table; then
        echo "✅ Image ${{ parameters.serviceName }}:${{ parameters.semver }} pushed successfully"
      else
        echo "❌ Image not found in ACR"
        exit 1
      fi 
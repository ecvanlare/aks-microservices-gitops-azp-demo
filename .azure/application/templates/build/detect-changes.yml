# Detect Changes Template
# Detects which services have changes and need to be built

parameters:
  gitDepth: 0  # Number of commits to look back
  sourceDir: 'src'  # Source directory to monitor

steps:
  # Detect which services have changes
  - script: |
      # Define all services and their paths
      ALL_SERVICES="cartservice,frontend,productcatalogservice,currencyservice,emailservice,paymentservice,shippingservice,recommendationservice,adservice,checkoutservice,shoppingassistantservice"
      IFS=',' read -ra SERVICES <<< "$ALL_SERVICES"

      # Define service paths
      declare -A SERVICE_PATHS
      SERVICE_PATHS["cartservice"]="src/cartservice/"
      SERVICE_PATHS["frontend"]="src/frontend/"
      SERVICE_PATHS["productcatalogservice"]="src/productcatalogservice/"
      SERVICE_PATHS["currencyservice"]="src/currencyservice/"
      SERVICE_PATHS["emailservice"]="src/emailservice/"
      SERVICE_PATHS["paymentservice"]="src/paymentservice/"
      SERVICE_PATHS["shippingservice"]="src/shippingservice/"
      SERVICE_PATHS["recommendationservice"]="src/recommendationservice/"
      SERVICE_PATHS["adservice"]="src/adservice/"
      SERVICE_PATHS["checkoutservice"]="src/checkoutservice/"
      SERVICE_PATHS["shoppingassistantservice"]="src/shoppingassistantservice/"

      # Get changed files
      if [ "${{ parameters.gitDepth }}" -eq 0 ]; then
        CHANGED_FILES=$(git diff --name-only HEAD~1)
      else
        CHANGED_FILES=$(git diff --name-only HEAD~${{ parameters.gitDepth }})
      fi

      echo "Changed files:"
      echo "$CHANGED_FILES"

      SERVICES_TO_BUILD=""
      for service in "${!SERVICE_PATHS[@]}"; do
        path="${SERVICE_PATHS[$service]}"
        
        # Check if service path has changes
        if echo "$CHANGED_FILES" | grep -q "$path"; then
          echo "✅ $service has changes"
          echo "##vso[task.setvariable variable=BUILD_${service^^};isOutput=true]true"
          if [ -z "$SERVICES_TO_BUILD" ]; then
            SERVICES_TO_BUILD="$service"
          else
            SERVICES_TO_BUILD="$SERVICES_TO_BUILD $service"
          fi
        else
          echo "❌ $service has no changes"
          echo "##vso[task.setvariable variable=BUILD_${service^^};isOutput=true]false"
        fi
      done
      
      echo "##vso[task.setvariable variable=SERVICES_TO_BUILD_STAGE;isOutput=true]$SERVICES_TO_BUILD"
      echo "Services to build: $SERVICES_TO_BUILD"
    displayName: 'Detect Changed Services'
    name: DetectChanges


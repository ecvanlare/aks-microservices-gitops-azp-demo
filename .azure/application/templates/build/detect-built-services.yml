# Detect Built Services Template
# Detects which services were actually built by checking for artifacts

parameters:
  services: []  # List of services to check (optional, defaults to all services)

steps:
- task: PowerShell@2
  displayName: 'Detect Built Services'
  name: DetectBuiltServices
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "üîç DETECTING BUILT SERVICES"
      
      # Initialize built services list
      $builtServices = @()
      
      # Define services to check
      if ([string]::IsNullOrEmpty("${{ parameters.services }}")) {
        $services = @("cartservice", "frontend", "productcatalogservice", "currencyservice", "emailservice", "paymentservice", "shippingservice", "recommendationservice", "adservice", "checkoutservice", "shoppingassistantservice")
      } else {
        $services = "${{ parameters.services }}".Split(' ')
      }
      
      Write-Host "Checking for built services..."
      
      foreach ($service in $services) {
        $artifactPath = "$(Pipeline.Workspace)/$service-docker-image"
        if (Test-Path $artifactPath) {
          Write-Host "‚úÖ Found built service: $service"
          $builtServices += $service
        } else {
          Write-Host "‚ùå Service not built: $service"
        }
      }
      
      $builtServicesString = $builtServices -join ' '
      Write-Host "üìã BUILT SERVICES: $builtServicesString"
      
      # Set output variable
      Write-Host "##vso[task.setvariable variable=BUILT_SERVICES;isOutput=true]$builtServicesString" 
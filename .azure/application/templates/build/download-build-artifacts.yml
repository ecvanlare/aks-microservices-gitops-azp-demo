# Get Build Info Template
# Downloads build artifacts and extracts semver and built services list

parameters:
  gitDepth: 0  # Git fetch depth for checkout

steps:
  - checkout: self
    fetchDepth: ${{ parameters.gitDepth }}
    
  - script: |
      echo "Checking if triggered by a build pipeline..."
      
      if [ -n "$(Build.TriggeredBy.BuildId)" ] && [ -n "$(Build.TriggeredBy.DefinitionName)" ]; then
        echo "‚úÖ Triggered by build pipeline: $(Build.TriggeredBy.DefinitionName) #$(Build.TriggeredBy.BuildId)"
        echo "Will download artifacts from triggering build"
      else
        echo "‚ö†Ô∏è  Not triggered by a build pipeline, will use GitVersion"
      fi
    displayName: 'Check Build Trigger'
    
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'specific'
      project: '$(System.TeamProject)'
      pipeline: '$(Build.TriggeredBy.DefinitionName)'
      runId: '$(Build.TriggeredBy.BuildId)'
      artifactName: 'build-artifacts'
      targetPath: 'artifacts'
    condition: and(succeeded(), ne(variables['Build.TriggeredBy.BuildId'], ''))
    displayName: 'Download Build Artifacts'
    
  - script: |
      echo "Checking for artifacts directory..."
      ls -la artifacts/ || echo "No artifacts directory found"
      
      if [ -f "artifacts/build-artifacts/semver.txt" ]; then
        SEMVER=$(cat artifacts/build-artifacts/semver.txt)
        echo "‚úÖ Using semver from build artifact: $SEMVER"
        echo "##vso[task.setvariable variable=ExtractSemver.SEMVER;isOutput=true]$SEMVER"
      else
        echo "‚ö†Ô∏è  No semver artifact found, will use GitVersion"
        echo "##vso[task.setvariable variable=ExtractSemver.SEMVER;isOutput=true]$(GitVersion.SemVer)"
      fi
    displayName: 'Extract Semver'
    name: 'ExtractSemver'
    
  - script: |
      echo "Checking for services-to-deploy.txt..."
      ls -la artifacts/build-artifacts/ || echo "No build-artifacts directory found"
      
      if [ -f "artifacts/build-artifacts/services-to-deploy.txt" ]; then
        echo "üì¶ Built services from CI pipeline:"
        cat artifacts/build-artifacts/services-to-deploy.txt
        
        # Read services and create a space-separated list for GitOps template
        BUILT_SERVICES=""
        while IFS=: read -r service tag; do
          if [ -n "$service" ] && [ -n "$tag" ]; then
            echo "üîÑ Will deploy $service with tag $tag"
            BUILT_SERVICES="$BUILT_SERVICES $service"
          fi
        done < artifacts/build-artifacts/services-to-deploy.txt
        
        echo "Final built services list: '$BUILT_SERVICES'"
        echo "##vso[task.setvariable variable=BUILT_SERVICES_LIST;isOutput=true]$BUILT_SERVICES"
      else
        echo "‚ö†Ô∏è  No built services list found, will use all services"
        echo "##vso[task.setvariable variable=BUILT_SERVICES_LIST;isOutput=true]cartservice frontend productcatalogservice currencyservice checkoutservice shoppingassistantservice adservice emailservice paymentservice recommendationservice shippingservice"
      fi
    displayName: 'Read Built Services List'
    name: 'BuiltServices' 
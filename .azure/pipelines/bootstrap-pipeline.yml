trigger:
  branches:
    include:
      - main
  paths:
    include:
      - terraform/bootstrap/**

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: online-boutique.common    # Common variables (like AZURE_SUBSCRIPTION)
  - group: terraform.bootstrap       # Bootstrap-specific variables
  - name: BACKEND_CONFIG
    value: |
      terraform {
        backend "azurerm" {
          storage_account_name = "$(STORAGE_ACCOUNT_NAME)"
          container_name       = "$(CONTAINER_NAME)"
          key                  = "$(TERRAFORM_STATE_KEY)"
          resource_group_name  = "$(RESOURCE_GROUP_NAME)"
        }
      }
  - name: shouldApply
    value: 'false'  # Pipeline control - set to true to run apply
  - name: shouldDestroy
    value: 'false'  # Pipeline control - set to true to run destroy

stages:
- stage: Validate
  displayName: 'Validate Terraform'
  jobs:
  - job: Validate
    displayName: 'Terraform Validate'
    steps:
    - template: templates/terraform/terraform.yml
      parameters:
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/bootstrap'
        backendConfig: $(BACKEND_CONFIG)
        command: 'validate'

- stage: Plan
  displayName: 'Plan Changes'
  dependsOn: Validate
  condition: succeeded()
  jobs:
  - job: Plan
    displayName: 'Terraform Plan'
    steps:
    - template: templates/terraform/terraform.yml
      parameters:
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/bootstrap'
        backendConfig: $(BACKEND_CONFIG)
        command: 'plan'

- stage: Apply
  displayName: 'Apply Changes'
  dependsOn: Plan
  condition: and(succeeded(), eq(variables['shouldApply'], 'true'))
  jobs:
  - deployment: Apply
    displayName: 'Terraform Apply'
    environment: 'bootstrap'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/terraform/terraform.yml
            parameters:
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/bootstrap'
              backendConfig: $(BACKEND_CONFIG)
              command: 'apply'

- stage: Destroy
  displayName: 'Destroy Infrastructure'
  condition: eq(variables['shouldDestroy'], 'true')
  jobs:
  - deployment: Destroy
    displayName: 'Terraform Destroy'
    environment: 'bootstrap-destroy'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/terraform/terraform.yml
            parameters:
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/bootstrap'
              backendConfig: $(BACKEND_CONFIG)
              command: 'destroy' 
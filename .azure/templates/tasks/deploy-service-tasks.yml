parameters:
  vmImage: 'ubuntu-22.04'
  namespace: 'online-boutique'
  releaseName: 'online-boutique'
  helmVersion: '3.12.0'
  helmTimeout: '10m'
  podReadyTimeout: 300
  includeVerification: true
  semver: ''  # Semantic version for deployment

steps:
  - checkout: self
    fetchDepth: 0

  # Deploy using Helm
  - template: helm/helm-deploy-template.yml
    parameters:
      clusterName: $(AKS_CLUSTER_NAME)
      resourceGroup: $(RESOURCE_GROUP)
      namespace: ${{ parameters.namespace }}
      chartPath: 'online-boutique-chart'
      releaseName: ${{ parameters.releaseName }}
      valuesFile: 'values.yaml'
      acrName: $(ACR_NAME)
      helmVersion: ${{ parameters.helmVersion }}
      helmTimeout: ${{ parameters.helmTimeout }}
      semver: ${{ parameters.semver }}
      azureSubscription: $(AZURE_SUBSCRIPTION)

  # Optional verification
  - ${{ if eq(parameters.includeVerification, 'true') }}:
    - task: AzureCLI@2
      displayName: 'Get AKS Credentials'
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials -n $(AKS_CLUSTER_NAME) -g $(RESOURCE_GROUP) --overwrite-existing

    - script: |
        # Wait for pods to be ready
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/instance=${{ parameters.releaseName }} -n ${{ parameters.namespace }} --timeout=${{ parameters.podReadyTimeout }}s
        
        # Display deployment status
        kubectl get pods -n ${{ parameters.namespace }} -l app.kubernetes.io/instance=${{ parameters.releaseName }}
        kubectl get services -n ${{ parameters.namespace }} -l app.kubernetes.io/instance=${{ parameters.releaseName }}
        kubectl get deployments -n ${{ parameters.namespace }} -l app.kubernetes.io/instance=${{ parameters.releaseName }}
        
        # Show image tags
        kubectl get pods -n ${{ parameters.namespace }} -l app.kubernetes.io/instance=${{ parameters.releaseName }} -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.containers[*].image}{"\n"}{end}'
      displayName: 'Verify Deployment Status' 
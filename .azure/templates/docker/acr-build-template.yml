parameters:
  acrName: ''  # Required: ACR name
  resourceGroup: ''  # Required: Resource group name
  serviceName: ''  # Required: Service name to build
  dockerfile: ''  # Required: Dockerfile path
  context: ''  # Required: Build context
  retryCount: 2  # Optional: Number of retries on failure
  azureSubscription: '$(AZURE_SUBSCRIPTION)'  # Optional: Azure subscription
  tags: '$(SEMVER)'  # Optional: Image tags

variables:
  DOCKER_BUILDKIT: '1'
  DOCKER_CLI_EXPERIMENTAL: 'enabled'
  DOCKER_BUILD_ARGS: '--pull'
  BUILD_CACHE_FROM: 'type=registry,ref=${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.tags }}'
  BUILD_CACHE_TO: 'type=registry,ref=${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.tags }}'

steps:
- task: AzureCLI@2
  displayName: 'Login to Azure Container Registry'
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Login to ACR using managed identity or service principal
      az acr login --name ${{ parameters.acrName }}

- task: Docker@2
  displayName: 'Build and Push ${{ parameters.serviceName }}'
  retryCountOnTaskFailure: ${{ parameters.retryCount }}
  inputs:
    command: buildAndPush
    repository: ${{ parameters.serviceName }}
    dockerfile: ${{ parameters.dockerfile }}
    buildContext: '$(System.DefaultWorkingDirectory)/${{ parameters.context }}'
    containerRegistry: ${{ parameters.acrName }}
    tags: ${{ parameters.tags }}
    buildOptions: $(DOCKER_BUILD_ARGS) --cache-from $(BUILD_CACHE_FROM) --cache-to $(BUILD_CACHE_TO)

- script: |
    echo "Image built and pushed: ${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}:${{ parameters.tags }}"
  displayName: 'Echo Built Image Tag for ${{ parameters.serviceName }}'
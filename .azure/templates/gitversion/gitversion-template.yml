parameters:
  name: 'GitVersion'  # Name for the GitVersion task output
  fetchDepth: 0  # Git fetch depth for version calculation
  useConfigFile: false  # Whether to use GitVersion config file

steps:
  - checkout: self
    fetchDepth: ${{ parameters.fetchDepth }}

  - task: gitversion/setup@3
    name: ${{ parameters.name }}Setup
    inputs:
      versionSpec: '5.x'

  - task: gitversion/execute@3
    name: ${{ parameters.name }}
    inputs:
      useConfigFile: ${{ parameters.useConfigFile }}

  - script: |
      echo "=== GitVersion Results ==="
      echo "SemVer: $(GitVersion.SemVer)"
      echo "MajorMinorPatch: $(GitVersion.MajorMinorPatch)"
      echo "Major: $(GitVersion.Major)"
      echo "Minor: $(GitVersion.Minor)"
      echo "Patch: $(GitVersion.Patch)"
      echo "PreReleaseTag: $(GitVersion.PreReleaseTag)"
      echo "PreReleaseTagWithDash: $(GitVersion.PreReleaseTagWithDash)"
      echo "PreReleaseLabel: $(GitVersion.PreReleaseLabel)"
      echo "PreReleaseNumber: $(GitVersion.PreReleaseNumber)"
      echo "WeightedPreReleaseNumber: $(GitVersion.WeightedPreReleaseNumber)"
      echo "BuildMetaData: $(GitVersion.BuildMetaData)"
      echo "BuildMetaDataPadded: $(GitVersion.BuildMetaDataPadded)"
      echo "FullBuildMetaData: $(GitVersion.FullBuildMetaData)"
      echo "MajorMinorPatchPadded: $(GitVersion.MajorMinorPatchPadded)"
      echo "SemVerPadded: $(GitVersion.SemVerPadded)"
      echo "LegacySemVer: $(GitVersion.LegacySemVer)"
      echo "LegacySemVerPadded: $(GitVersion.LegacySemVerPadded)"
      echo "AssemblySemVer: $(GitVersion.AssemblySemVer)"
      echo "AssemblySemFileVer: $(GitVersion.AssemblySemFileVer)"
      echo "FullSemVer: $(GitVersion.FullSemVer)"
      echo "InformationalVersion: $(GitVersion.InformationalVersion)"
      echo "BranchName: $(GitVersion.BranchName)"
      echo "EscapedBranchName: $(GitVersion.EscapedBranchName)"
      echo "Sha: $(GitVersion.Sha)"
      echo "ShortSha: $(GitVersion.ShortSha)"
      echo "NuGetVersionV2: $(GitVersion.NuGetVersionV2)"
      echo "NuGetVersion: $(GitVersion.NuGetVersion)"
      echo "NuGetPreReleaseTagV2: $(GitVersion.NuGetPreReleaseTagV2)"
      echo "NuGetPreReleaseTag: $(GitVersion.NuGetPreReleaseTag)"
      echo "VersionSourceSha: $(GitVersion.VersionSourceSha)"
      echo "CommitsSinceVersionSource: $(GitVersion.CommitsSinceVersionSource)"
      echo "CommitsSinceVersionSourcePadded: $(GitVersion.CommitsSinceVersionSourcePadded)"
      echo "UncommittedChanges: $(GitVersion.UncommittedChanges)"
      echo "CommitDate: $(GitVersion.CommitDate)"
      echo "=========================="
    displayName: 'Display GitVersion Information'

  - script: |
      # Set output variables for use in other stages
      echo "##vso[task.setvariable variable=SEMVER;isOutput=true]$(GitVersion.SemVer)"
      echo "##vso[task.setvariable variable=FULL_SEMVER;isOutput=true]$(GitVersion.FullSemVer)"
      echo "##vso[task.setvariable variable=MAJOR_MINOR_PATCH;isOutput=true]$(GitVersion.MajorMinorPatch)"
      echo "##vso[task.setvariable variable=BUILD_METADATA;isOutput=true]$(GitVersion.BuildMetaData)"
      echo "##vso[task.setvariable variable=COMMIT_SHA;isOutput=true]$(GitVersion.Sha)"
      echo "##vso[task.setvariable variable=BRANCH_NAME;isOutput=true]$(GitVersion.BranchName)"
    name: SetVersionOutputs
    displayName: 'Set Version Output Variables' 
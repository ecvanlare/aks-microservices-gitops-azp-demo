parameters:
  vmImage: 'ubuntu-22.04'
  packageMaxParallel: 4
  packageRetryCount: 2
  packageTimeoutMinutes: 30
  services:
    - name: cartservice
      dockerfile: '$(APP_SOURCE_DIR)/cartservice/src/Dockerfile'
      context: 'src/cartservice/src'
    - name: productcatalogservice
      dockerfile: '$(APP_SOURCE_DIR)/productcatalogservice/Dockerfile'
      context: 'src/productcatalogservice'
    - name: currencyservice
      dockerfile: '$(APP_SOURCE_DIR)/currencyservice/Dockerfile'
      context: 'src/currencyservice'
    - name: emailservice
      dockerfile: '$(APP_SOURCE_DIR)/emailservice/Dockerfile'
      context: 'src/emailservice'
    - name: paymentservice
      dockerfile: '$(APP_SOURCE_DIR)/paymentservice/Dockerfile'
      context: 'src/paymentservice'
    - name: shippingservice
      dockerfile: '$(APP_SOURCE_DIR)/shippingservice/Dockerfile'
      context: 'src/shippingservice'
    - name: recommendationservice
      dockerfile: '$(APP_SOURCE_DIR)/recommendationservice/Dockerfile'
      context: 'src/recommendationservice'
    - name: adservice
      dockerfile: '$(APP_SOURCE_DIR)/adservice/Dockerfile'
      context: 'src/adservice'
    - name: checkoutservice
      dockerfile: '$(APP_SOURCE_DIR)/checkoutservice/Dockerfile'
      context: 'src/checkoutservice'
    - name: shoppingassistantservice
      dockerfile: '$(APP_SOURCE_DIR)/shoppingassistantservice/Dockerfile'
      context: 'src/shoppingassistantservice'
    - name: frontend
      dockerfile: '$(APP_SOURCE_DIR)/frontend/Dockerfile'
      context: 'src/frontend'

steps:
  # ACR validation
  - task: AzureCLI@2
    displayName: 'Validate ACR Access'
    inputs:
      azureSubscription: $(AZURE_SUBSCRIPTION)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "=== Validating ACR: $(ACR_NAME) in Resource Group: $(RESOURCE_GROUP) ==="
        
        # Validate resource group and ACR existence
        if ! az group show -n "$(RESOURCE_GROUP)" &>/dev/null; then
          echo "##vso[task.logissue type=error]Resource group $(RESOURCE_GROUP) not found"
          az group list --query "[].name" -o tsv
          exit 1
        fi
        
        if ! az acr show -n "$(ACR_NAME)" -g "$(RESOURCE_GROUP)" &>/dev/null; then
          echo "##vso[task.logissue type=error]ACR $(ACR_NAME) not found in resource group $(RESOURCE_GROUP)"
          exit 1
        fi
        
        # Test ACR login
        if ! az acr login --name "$(ACR_NAME)" &>/dev/null; then
          echo "##vso[task.logissue type=error]Failed to login to ACR $(ACR_NAME)"
          exit 1
        fi
        
        echo "âœ… ACR $(ACR_NAME) is accessible and ready for builds"

  # Package images (matrix strategy)
  - ${{ each service in parameters.services }}:
    - script: |
        echo "Using SEMVER: $(SEMVER)"
        echo "Building service: ${{ service.name }}"
      displayName: 'Echo SEMVER and Service for ${{ service.name }}'

    - template: docker/acr-build-template.yml
      parameters:
        acrName: $(ACR_NAME)
        resourceGroup: $(RESOURCE_GROUP)
        serviceName: ${{ service.name }}
        dockerfile: ${{ service.dockerfile }}
        context: ${{ service.context }}
        retryCount: ${{ parameters.packageRetryCount }}
        azureSubscription: $(AZURE_SUBSCRIPTION)
        tags: $(SEMVER)

  # Helm validation
  - checkout: self
  - task: HelmInstaller@0
    displayName: 'Install Helm'
    inputs:
      helmVersion: '3.12.0'
  - script: |
      helm lint online-boutique-chart
      helm dependency build online-boutique-chart
      helm template $(RELEASE_NAME) online-boutique-chart \
        --values online-boutique-chart/values.yaml \
        --namespace $(NAMESPACE) \
        --debug
    displayName: 'Validate Chart and Values' 
global:
  image:
    registry: acronlineboutique.azurecr.io
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  securityContext: {}
# --- Services Config ---
adservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 200m
      memory: 180Mi
    limits:
      cpu: 300m
      memory: 300Mi
  image:
    repository: adservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 9555
  env:
    PORT: "9555"
    DISABLE_PROFILER: "1"
cartservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 200m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi
  image:
    repository: cartservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 7070
  env:
    PORT: "7070"
    REDIS_ADDR: "redis-cart:6379"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: agentpool
                operator: In
                values:
                  - userpool
checkoutservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  image:
    repository: checkoutservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 5050
  env:
    PORT: "5050"
    PRODUCT_CATALOG_SERVICE_ADDR: "productcatalogservice:3550"
    SHIPPING_SERVICE_ADDR: "shippingservice:50051"
    PAYMENT_SERVICE_ADDR: "paymentservice:50051"
    EMAIL_SERVICE_ADDR: "emailservice:8080"
    CURRENCY_SERVICE_ADDR: "currencyservice:7000"
    CART_SERVICE_ADDR: "cartservice:7070"
currencyservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  image:
    repository: currencyservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 7000
  env:
    PORT: "7000"
    PROJECT_ID: "online-boutique"
emailservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  image:
    repository: emailservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 8080
  env:
    PORT: "8080"
    DISABLE_PROFILER: "1"
frontend:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  image:
    repository: frontend
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 8080
  env:
    PORT: "8080"
    AD_SERVICE_ADDR: "adservice:9555"
    CART_SERVICE_ADDR: "cartservice:7070"
    CHECKOUT_SERVICE_ADDR: "checkoutservice:5050"
    CURRENCY_SERVICE_ADDR: "currencyservice:7000"
    PRODUCT_CATALOG_SERVICE_ADDR: "productcatalogservice:3550"
    RECOMMENDATION_SERVICE_ADDR: "recommendationservice:8080"
    SHIPPING_SERVICE_ADDR: "shippingservice:50051"
    SHOPPING_ASSISTANT_SERVICE_ADDR: "shoppingassistantservice:8080"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: agentpool
                operator: In
                values:
                  - userpool
paymentservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  image:
    repository: paymentservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 50051
  env:
    PORT: "50051"
productcatalogservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  image:
    repository: productcatalogservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 3550
  env:
    PORT: "3550"
recommendationservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 220Mi
    limits:
      cpu: 200m
      memory: 450Mi
  image:
    repository: recommendationservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 8080
  env:
    PORT: "8080"
    PRODUCT_CATALOG_SERVICE_ADDR: "productcatalogservice:3550"
    CURRENCY_SERVICE_ADDR: "currencyservice:7000"
    DISABLE_PROFILER: "1"
redis-cart:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  image:
    repository: bitnami/redis
    tag: 7.4.1
  service:
    type: ClusterIP
    port: 6379
  persistence:
    enabled: true
    size: 2Gi
    storageClass: "managed-csi"
    accessMode: ReadWriteOnce
  auth:
    enabled: false
  #   existingSecret: redis-password
  #   existingSecretPasswordKey: redis-password
  allowEmptyPassword: true
shippingservice:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  image:
    repository: shippingservice
    tag: 0.1.0-alpha.214
  service:
    type: ClusterIP
    port: 50051
  env:
    PORT: "50051"
shoppingassistantservice:
  enabled: false
  replicaCount: 1
  image:
    repository: shoppingassistantservice
    tag: 0.1.0-alpha.216
  service:
    type: ClusterIP
    port: 8080
  env:
    PORT: "8080"
    PROJECT_ID: "online-boutique"
    REGION: "uksouth"
    DB_HOST: "online-boutique-postgres.postgres.database.azure.com"
    DB_NAME: "shopping_assistant"
    DB_USER: "postgres"
    DB_PORT: "5432"
    DB_SSL_MODE: "require"
    DISABLE_PROFILER: "1"
# --- Ingress Config ---
ingress:
  enabled: true
  hosts:
    - "ecvlsolutions.com"
    - "www.ecvlsolutions.com"
  className: "nginx"
# SSL Configuration (uses cluster-level Cert-Manager)
ssl:
  enabled: true
  clusterIssuer: "letsencrypt-prod" # References the cluster-level issuer
  sslRedirect: false
# Infrastructure dependencies
cert-manager:
  enabled: true
ingress-nginx:
  enabled: true
  controller:
    fullnameOverride: ingress-nginx-controller
    replicaCount: 2
    publishService:
      enabled: true
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-internal: "false"
        service.beta.kubernetes.io/azure-load-balancer-resource-group: "rg-online-boutique"
    config:
      use-proxy-protocol: "false"
      proxy-real-ip-cidr: "0.0.0.0/0"
      use-forwarded-headers: "true"
      enable-real-ip: "true"
      proxy-connect-timeout: "5"
      proxy-send-timeout: "60"
      proxy-read-timeout: "60"
    metrics:
      enabled: true
    nodeSelector: {}
    tolerations:
      - key: "ingress"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: agentpool
                  operator: In
                  values:
                    - ingress
# --- HPA Config ---
hpa:
  enabled: true
  global:
    cpu:
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 70
  frontend:
    enabled: true
    minReplicas: 1
    maxReplicas: 8
    cpu:
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 70
  cartservice:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    cpu:
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 70
  productcatalogservice:
    enabled: true
    minReplicas: 1
    maxReplicas: 4
    cpu:
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 70

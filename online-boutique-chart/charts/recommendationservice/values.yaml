# Number of replicas to deploy
replicaCount: 1

# Container image configuration
image:
  repository: recommendationservice
  tag: {{ .Values.global.image.tag }}
  pullPolicy: {{ .Values.global.image.pullPolicy }}

# Service configuration
service:
  type: {{ .Values.global.service.type }}
  port: 8080

# Resource configuration
resources:
  limits:
    cpu: {{ .Values.global.resources.limits.cpu }}
    memory: {{ .Values.global.resources.limits.memory }}
  requests:
    cpu: {{ .Values.global.resources.requests.cpu }}
    memory: {{ .Values.global.resources.requests.memory }}

# Environment variables
env:
  PORT: {{ .Values.global.env.PORT }}
  DISABLE_PROFILER: {{ .Values.global.env.DISABLE_PROFILER }}
  PRODUCT_CATALOG_SERVICE_ADDR: {{ .Values.global.serviceAddresses.PRODUCT_CATALOG_SERVICE_ADDR }}
  CURRENCY_SERVICE_ADDR: {{ .Values.global.serviceAddresses.CURRENCY_SERVICE_ADDR }}

# Security context
podSecurityContext:
  fsGroup: {{ .Values.global.podSecurityContext.fsGroup }}

securityContext:
  runAsUser: {{ .Values.global.securityContext.runAsUser }}
  runAsNonRoot: {{ .Values.global.securityContext.runAsNonRoot }}

# Health check configuration
livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3 
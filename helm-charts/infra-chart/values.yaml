# Infrastructure Chart Values
# This chart manages all infrastructure components

# Ingress NGINX Configuration
ingress-nginx:
  enabled: true
  controller:
    fullnameOverride: ingress-nginx-controller
    replicaCount: 2
    publishService:
      enabled: true
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-internal: "false"
        service.beta.kubernetes.io/azure-load-balancer-resource-group: "rg-online-boutique"
    config:
      use-proxy-protocol: "false"
      proxy-real-ip-cidr: "0.0.0.0/0"
      use-forwarded-headers: "true"
      enable-real-ip: "true"
      proxy-connect-timeout: "5"
      proxy-send-timeout: "60"
      proxy-read-timeout: "60"
    metrics:
      enabled: true
    nodeSelector: {}
    tolerations:
    - key: "ingress"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: agentpool
              operator: In
              values:
              - ingress

# Cert-Manager Configuration
cert-manager:
  enabled: true
  installCRDs: true
  # ClusterIssuer will be created separately
  # This ensures proper SSL certificate management

# External-DNS Configuration
external-dns:
  enabled: true
  provider: cloudflare
  sources:
    - ingress
  policy: sync
  registry: txt
  domainFilters:
    - "ecvlsolutions.com"
  logLevel: info
  interval: 1m
  rbac:
    create: true
  serviceAccount:
    create: true
    name: "external-dns"
  resources:
    requests:
      cpu: 50m
      memory: 50Mi
    limits:
      cpu: 100m
      memory: 100Mi
  env:
    - name: CF_API_TOKEN
      value: "ix2sv-NeOqnk7MQi1ZiPHIJJmhgNae6L6uexPVDN"
    - name: CF_ZONE_ID
      value: "3b92c2482c1ccf5f87e36c519680666d"

# ArgoCD Configuration
argocd:
  enabled: true
  # Server configuration
  server:
    extraArgs:
      - --insecure
    ingress:
      enabled: false  # Disable built-in ingress, use our custom one
  # Custom ingress configuration
  ingress:
    enabled: true
    host: argocd.ecvlsolutions.com

  # RBAC configuration
  rbac:
    create: true
    pspEnabled: false

  # Resource limits
  controller:
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi

  repoServer:
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi

  applicationSet:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi

  # Redis for HA (optional)
  redis:
    enabled: false

  # HA configuration
  ha:
    enabled: false 

clusterIssuer:
  enabled: true
  name: letsencrypt-prod
  server: https://acme-v02.api.letsencrypt.org/directory
  email: c.vanlare@outlook.com
  ingressClass: nginx 